#!/bin/bash

# This script slices audio into separate files based on silent place in the audio file.
##      TODO:
##      • Add option for any audio file that maintains the file extension.
##      • Remove initial empty audio file generated.
##      • Remove any files that are only short pieces of silence
##      • Code for editing clips after locating IN/OUT with ffprobe

IN=$1
OUT=$(basename "$IN" .wav)%03d.wav

if [ -z "$IN" ]; then
    echo "It is necessary to have an audio clip for input."
    exit 1
fi

echo "Determining Tracks..." >& 2

ENDS=$(
    ffmpeg  -v warning -i "$IN" -af silencedetect=-55dB:d=0.35,ametadata=mode=print:file=-:key=lavfi.silence_start  -vn -sn -f wav -y /dev/null \
    | grep lavfi.silence_start= \
    | cut -f 2-2 -d = \

)
echo
echo "Finding silence..." >& 2

STARTS=$(
    ffmpeg  -v warning -i "$IN" -af silencedetect=-55dB:d=0.35,ametadata=mode=print:file=-:key=lavfi.silence_end  -vn -sn -f wav -y /dev/null \
    | grep lavfi.silence_end= \
    | cut -f 2-2 -d = \

)

IFS=$'\n' read -rd '' -a start_array <<<"$STARTS"
IFS=$'\n' read -rd '' -a end_array <<<"$ENDS"

start_array=('0.0' "${start_array[@]}")

echo
echo "Processing..."


total=${#start_array[*]}
for (( j=0; j<=$(( $total -1 )); j++ ))
        do 
        s=${start_array[$j]}
        e=${end_array[$j]}
        #echo -n "Start: $s "
        #echo -n "End: $e "
        new_duration=`echo $e - $s | bc -l`
        #echo "Duration= $new_duration"
        ffmpeg -loglevel quiet -y -ss $s -i "$IN" -t $new_duration -c copy -map 0 $(basename "$IN" .m4a)-$j.m4a
        echo -n "#"
        done
echo
echo
echo "Audio has been split!"
